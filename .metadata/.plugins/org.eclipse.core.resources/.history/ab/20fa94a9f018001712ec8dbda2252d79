
class testthread implements Runnable{
	private Thread t;
	private String threadname;
	private int core;
	private double stime;
	private int[][] a = {{1,2,3,4,5,6,7,8},{5,6,7,8,9,10,11,12},{9,10,11,12,13,14,15,16},{13,14,15,16,17,18,19,20},{1,2,3,4,5,6,7,8},{5,6,7,8,9,10,11,12},{9,10,11,12,13,14,15,16},{13,14,15,16,17,18,19,20}};
	private int[][] b = {{1,2,3,4,5,6,7,8},{5,6,7,8,9,10,11,12},{9,10,11,12,13,14,15,16},{13,14,15,16,17,18,19,20},{1,2,3,4,5,6,7,8},{5,6,7,8,9,10,11,12},{9,10,11,12,13,14,15,16},{13,14,15,16,17,18,19,20}};
	

	testthread(int x,String name,double starttime)
	{
		threadname = name;
		core =x;
		stime = starttime;
//		System.out.println("Creating :" + threadname);
	}
	public double multiply()
	{
		try {
			for(int i = core;i<8;i+=4)
			{
				for(int j = 0;j<8;j++)
				{
					int sum = 0;
					for(int k = 0;k<8;k++)
					{
						sum = sum+ a[i][k]*b[k][j];
					}
					System.out.print(threadname + ": ");
					System.out.println(i+","+j+": " + sum );
				}
				
					Thread.sleep(10);						
			}			
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		return System.currentTimeMillis();
	}
	
	public void run() {
		// TODO Auto-generated method stub
//		System.out.println("running" + threadname);
		double time = multiply();
		double totaltime = time - stime;
		System.out.println("totaltime "+ core +" : " + totaltime);
		
	}
	public void start()
	{
//		System.out.println("Starting " + threadname);
		if (t == null) {
	         t = new Thread (this, threadname);
	         t.start ();
	    }
	}
	
}

public class multicore
{
	public static void main(String [] args)
	{	
		double starttime = System.currentTimeMillis();
		System.out.println("Starttime : " + starttime);
		testthread r1 = new testthread(0,"core1",starttime);
		r1.start();		
		testthread r2 = new testthread(1,"core2",starttime);
		r2.start();			
		testthread r3 = new testthread(2,"core3",starttime);
		r3.start();	
		testthread r4 = new testthread(3,"core4",starttime);
		r4.start();	
	
	}
}
